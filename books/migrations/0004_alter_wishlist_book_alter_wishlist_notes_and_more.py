# Generated by Django 5.2.4 on 2025-08-05 08:41

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("books", "0003_delete_my_borrows"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name="wishlist",
            name="book",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="books.book"
            ),
        ),
        migrations.AlterField(
            model_name="wishlist",
            name="notes",
            field=models.TextField(blank=True, max_length=500),
        ),
        migrations.AlterField(
            model_name="wishlist",
            name="priority",
            field=models.IntegerField(default=1, help_text="1=High, 2=Medium, 3=Low"),
        ),
        migrations.AlterField(
            model_name="wishlist",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="wishlist",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterModelTable(
            name="genre",
            table="genres",
        ),
        migrations.AlterModelTable(
            name="wishlist",
            table="wishlists",
        ),
        migrations.CreateModel(
            name="UserActivity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "activity_type",
                    models.CharField(
                        choices=[
                            ("borrow", "Book Borrowed"),
                            ("return", "Book Returned"),
                            ("wishlist_add", "Added to Wishlist"),
                            ("wishlist_remove", "Removed from Wishlist"),
                            ("review", "Book Reviewed"),
                            ("fine_paid", "Fine Paid"),
                            ("profile_update", "Profile Updated"),
                            ("password_change", "Password Changed"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.CharField(max_length=255)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "book",
                    models.ForeignKey(
                        blank=True,
                        help_text="Related book if applicable",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="books.book",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="activities",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Activity",
                "verbose_name_plural": "User Activities",
                "db_table": "user_activities",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True, default="avatars/default.png", upload_to="avatars/"
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        max_length=15,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\+?1?\\d{9,15}$", "Enter a valid phone number."
                            )
                        ],
                    ),
                ),
                ("address", models.TextField(blank=True, max_length=500)),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                (
                    "user_type",
                    models.CharField(
                        choices=[("student", "Student"), ("librarian", "Librarian")],
                        default="student",
                        max_length=10,
                    ),
                ),
                (
                    "student_id",
                    models.CharField(blank=True, max_length=20, null=True, unique=True),
                ),
                (
                    "employee_id",
                    models.CharField(blank=True, max_length=20, null=True, unique=True),
                ),
                ("department", models.CharField(blank=True, max_length=100)),
                ("email_notifications", models.BooleanField(default=True)),
                ("sms_notifications", models.BooleanField(default=False)),
                ("public_profile", models.BooleanField(default=True)),
                ("membership_date", models.DateTimeField(auto_now_add=True)),
                (
                    "library_card_number",
                    models.CharField(blank=True, max_length=20, unique=True),
                ),
                ("max_books_allowed", models.IntegerField(default=5)),
                (
                    "current_fines",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("is_active_member", models.BooleanField(default=True)),
                (
                    "reading_goal",
                    models.IntegerField(default=12, help_text="Books per year"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "favorite_genres",
                    models.ManyToManyField(blank=True, to="books.genre"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Profile",
                "verbose_name_plural": "User Profiles",
                "db_table": "user_profiles",
            },
        ),
        migrations.CreateModel(
            name="BookReview",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.IntegerField(
                        choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)]
                    ),
                ),
                ("review_text", models.TextField(blank=True, max_length=1000)),
                ("is_public", models.BooleanField(default=True)),
                ("helpful_count", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "book",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="book_reviews",
                        to="books.book",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="book_reviews",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "book_reviews",
                "ordering": ["-created_at"],
                "unique_together": {("user", "book")},
            },
        ),
    ]
